<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>umessae.com.cn</groupId>
  <artifactId>tel</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>${project-name}</name>
  
  <!-- ################### 开发者 #################### -->
  <developers>
	<developer>
		<name>邸永</name>
		<email>diyong@uemssage.com.cn</email>
	</developer>
  </developers>  

  <!-- #################  依赖配置   ################### -->
  <properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<spring.version>4.0.0.RELEASE</spring.version>
	<project-name>tel</project-name>
  </properties>
  
  
  <!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。 -->
  <dependencies>
  
  	<!-- junit 测试用 -->
  	<dependency>
  		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>3.8.1</version>
		<type> jar </type>
		<scope>test</scope>
	</dependency>
	
	<!-- 系统包 -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope>
	</dependency>

    <!-- 使用的包 -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>  
	    <groupId>org.springframework</groupId>  
	    <artifactId>spring-context</artifactId>  
	    <version>${spring.version}</version>  
	</dependency>
	<dependency>  
	    <groupId>org.springframework</groupId>  
	    <artifactId>spring-context-support</artifactId>  
	    <version>${spring.version}</version>  
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-aop</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-tx</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-jdbc</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-web</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-webmvc</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	
	<dependency>
	  <groupId>org.freemarker</groupId>
	  <artifactId>freemarker</artifactId>
	  <version>2.3.20</version>
	</dependency>

  	<dependency>
  		<groupId>mysql</groupId>
  		<artifactId>mysql-connector-java</artifactId>
  		<version>5.1.9</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>commons-dbcp</groupId>
  		<artifactId>commons-dbcp</artifactId>
  		<version>1.4</version>
  	</dependency>
  	<dependency>
  		<groupId>commons-pool</groupId>
  		<artifactId>commons-pool</artifactId>
  		<version>1.4</version>
  	</dependency>
  	<dependency>
  		<groupId>commons-lang</groupId>
  		<artifactId>commons-lang</artifactId>
  		<version>2.6</version>
  	</dependency>
  	
	<dependency>
	  <groupId>commons-digester</groupId>
	  <artifactId>commons-digester</artifactId>
	  <version>2.1</version>
	</dependency>
  	
  	<dependency>
	  	<groupId>com.googlecode.xmemcached</groupId>
	  	<artifactId>xmemcached</artifactId>
	  	<version>1.3.8</version>
  	</dependency>

	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.7</version>
	</dependency>

	<dependency>
	  <groupId>com.google.code.gson</groupId>
	  <artifactId>gson</artifactId>
	  <version>2.2.4</version>
	</dependency>

	<dependency>
	  <groupId>javax.mail</groupId>
	  <artifactId>mail</artifactId>
	  <version>1.5.0-b01</version>
	</dependency>
	
  	<dependency>
  		<groupId>log4j</groupId>
  		<artifactId>log4j</artifactId>
		<version>1.2.12</version>
	</dependency>
	
	<dependency>
	  <groupId>com.belerweb</groupId>
	  <artifactId>pinyin4j</artifactId>
	  <version>2.5.0</version>
	</dependency>
	
	<dependency>
	  <groupId>org.apache.httpcomponents</groupId>
	  <artifactId>httpclient</artifactId>
	  <version>4.3.3</version>
	</dependency>

	<!-- 
  	<dependency>
  		<groupId>mmseg4j</groupId>
        <artifactId>mmseg4j</artifactId>
        <version>1.1.1</version>
        <scope>system</scope>
        <!- -本地jar的路径,相对或者绝对都可以- ->
        <systemPath>${basedir}/j2ee_lib/mmseg4j-all-1.8.2-with-dic.jar</systemPath>  
    </dependency>  
     -->
	 
  </dependencies>
  
  <!-- ############ 编译构建    ################### -->
  <!-- 构建项目需要的信息 -->
  <build>
 	<!-- 指定去掉后缀的工程名字，例如：默认为${artifactId}-${version}。 -->
  	<finalName>${project-name}</finalName>
  	
  	<!-- 默认的目标，必须跟命令行上的参数相同，如：jar:jar,或者与时期parse相同,例如install -->
  	<defaultGoal>war</defaultGoal>
  	
  	<!-- ###################### -->
  	<!-- 该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。 -->
  	<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
  	
	<!-- 被编译过的应用程序class文件存放的目录。 -->
	<outputDirectory>${basedir}/src/main/webapp/WEB-INF/classes</outputDirectory>
	
	<!-- ###################### -->
	<!-- 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。 -->
	<resources>
		<!-- 这个元素描述了项目相关或测试相关的所有资源路径 -->
		<resource>
		<!-- 描述存放资源的目录，该路径相对POM路径 -->
		<directory>${basedir}/src/main/resources</directory>
		
		<!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。 -->
		<filtering>false</filtering>
		
		<!-- 包含的模式列表，例如**/*.xml. -->
		<includes>
			<include>**/*.xml</include>
			<include>**/*.properties</include>
			<include>**/*.txt</include>
		</includes>
		
		</resource>
	</resources> 
	
	<!-- 构建产生的所有文件存放的目录 -->
	<directory>${basedir}/war</directory>
	
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
		  	<artifactId>maven-resources-plugin</artifactId>
		  	<version>2.6</version>
  		</plugin>
  		
  		<!-- 设置源文件编码方式 --> 
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-compiler-plugin</artifactId>
  			<version>3.1</version>
  			<configuration>
  				<defaultLibBundleDir>lib</defaultLibBundleDir>
				<source>1.6</source>
				<target>1.6</target>
				<encoding>UTF-8</encoding>
			</configuration>
  		</plugin>
  		
  		<!-- 拷贝依赖的jar包到lib目录  -->
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-dependency-plugin</artifactId>
  			<version>2.8</version>
  			<executions>
  				<execution>
  					<id>copy</id>
  					<phase>package</phase>
  					<goals>
  						<goal>copy-dependencies</goal>
  					</goals>
  					<configuration>
  						<outputDirectory>${basedir}/src/main/webapp/WEB-INF/lib</outputDirectory>
  					</configuration>
  				</execution>
  			</executions>
  		</plugin>
  		
  		<!-- war 包 -->
        <plugin>
        	<groupId>org.apache.maven.plugins</groupId>
        	<artifactId>maven-war-plugin</artifactId>
        	<version>2.4</version>
        	<configuration>
	        	<webResources>
		        	<resource>
			        	<directory>${basedir}/src/main/webapp</directory>
		        	</resource>
	        	</webResources>
        	</configuration>
        </plugin>
  	</plugins>
  	
  </build>
  
  
</project>